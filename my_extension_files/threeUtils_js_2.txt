createStars = function (scene) {
  let M = 28
  let N = 28
  let scaler = 10;
  let vertices = [];
  let spacing_scale = 50
  for (let x = -M; x <= M; x += 1) {
      for (let z = -N; z <= N; z += 1) {
          // vertices.push(x / scaler, 0 / scaler, z / scaler)
          vertices.push(
              THREE.MathUtils.randFloatSpread(2000),
              THREE.MathUtils.randFloatSpread(2000),
              THREE.MathUtils.randFloatSpread(2000))
      }
  }

  const geometry = new THREE.BufferGeometry();
  geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));
  let material = new THREE.PointsMaterial({ size: .7, sizeAttenuation: true, alphaTest: 0.2, transparent: true });
  material.color.setHSL(.6, 0.8, 0.9);
  const particles = new THREE.Points(geometry, material);
  scene.add(particles);
  return particles
}


export {
  createScene,
  createLights,
  createStats,
  createRenderer,
  createCamera,
  createStars,

};

