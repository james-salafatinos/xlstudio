- g ) / delta;

		}
		h /= 6;
		if ( h < 0 ) {

			h += 1;

		}
		return {
			h: h * 360,
			s: s,
			v: max / 255
		};

	},
	rgb_to_hex: function rgb_to_hex( r, g, b ) {

		var hex = this.hex_with_component( 0, 2, r );
		hex = this.hex_with_component( hex, 1, g );
		hex = this.hex_with_component( hex, 0, b );
		return hex;

	},
	component_from_hex: function component_from_hex( hex, componentIndex ) {

		return hex >> componentIndex * 8 & 0xFF;

	},
	hex_with_component: function hex_with_component( hex, componentIndex, value ) {

		return value << ( tmpComponent = componentIndex * 8 ) | hex & ~ ( 0xFF << tmpComponent );

	}
};

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function ( obj ) {

	return typeof obj;

} : function ( obj ) {

	return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;

};











var classCallCheck = function ( instance, Constructor ) {

	if ( ! ( instance instanceof Constructor ) ) {

		throw new TypeError( "Cannot call a class as a function" );

	}

};

var createClass = function () {

	function defineProperties( target, props ) {

		for ( var i = 0; i < props.length; i ++ ) {

			var descriptor = props[ i ];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ( "value" in descriptor ) descriptor.writable = true;
			Object.defineProperty( target, descriptor.key, descriptor );

		}

	}

	return function ( Constructor, protoProps, staticProps ) {

		if ( protoProps ) defineProperties( Constructor.prototype, protoProps );
		if ( staticProps ) defineProperties( Constructor, staticProps );
		return Constructor;

	};

}();







var get = function get( object, property, receiver ) {

	if ( object === null ) object = Function.prototype;
	var desc = Object.getOwnPropertyDescriptor( object, p